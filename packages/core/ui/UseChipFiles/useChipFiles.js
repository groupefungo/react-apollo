"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useChipFiles = void 0;

var useChipFiles = function useChipFiles(stateFiles) {
  var setFilesState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var chipsData = function chipsData() {
    var d = [];
    Array.from(stateFiles).forEach(function (file) {
      d.push({
        label: file.name || file.filename,
        key: file.name || file.id,
        id: file.id
      });
    });
    return d;
  };

  var chipsChanged = function chipsChanged(_ref) {
    var files = _ref.target.files;
    var newFileList = [];
    Array.from(files).forEach(function (file) {
      newFileList.push(file);
    });
    Array.from(stateFiles).forEach(function (file) {
      newFileList.push(file);
    });
    setFilesState(newFileList);
  };

  var chipDeleted = function chipDeleted(chipToDelete) {
    return function () {
      var updatedFileList = [];
      Array.from(stateFiles).forEach(function (file) {
        if (file.name !== chipToDelete.key && file.id !== chipToDelete.id) {
          updatedFileList.push(file);
        }
      });
      setFilesState(updatedFileList);
    };
  };

  var chipClicked = function chipClicked(data) {
    return function () {
      if (!data.id) {
        return;
      }

      var fileUrl = "".concat(process.env.API_URL).concat(process.env.ATTACHMENT_DOWNLOAD_PATH);
      window.open("".concat(fileUrl, "/").concat(data.id, "/").concat(data.label));
    };
  };

  return {
    chipDeleted: chipDeleted,
    chipClicked: chipClicked,
    chipsData: chipsData,
    chipsChanged: chipsChanged
  };
};

exports.useChipFiles = useChipFiles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91aS9Vc2VDaGlwRmlsZXMvdXNlQ2hpcEZpbGVzLnRzeCJdLCJuYW1lcyI6WyJ1c2VDaGlwRmlsZXMiLCJzdGF0ZUZpbGVzIiwic2V0RmlsZXNTdGF0ZSIsImNoaXBzRGF0YSIsImQiLCJBcnJheSIsImZyb20iLCJmb3JFYWNoIiwiZmlsZSIsInB1c2giLCJsYWJlbCIsIm5hbWUiLCJmaWxlbmFtZSIsImtleSIsImlkIiwiY2hpcHNDaGFuZ2VkIiwiZmlsZXMiLCJ0YXJnZXQiLCJuZXdGaWxlTGlzdCIsImNoaXBEZWxldGVkIiwiY2hpcFRvRGVsZXRlIiwidXBkYXRlZEZpbGVMaXN0IiwiY2hpcENsaWNrZWQiLCJkYXRhIiwiZmlsZVVybCIsInByb2Nlc3MiLCJlbnYiLCJBUElfVVJMIiwiQVRUQUNITUVOVF9ET1dOTE9BRF9QQVRIIiwid2luZG93Iiwib3BlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLElBQU1BLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUNDLFVBQUQsRUFBc0M7QUFBQSxNQUF6QkMsYUFBeUIsdUVBQVQsSUFBUzs7QUFDaEUsTUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksR0FBTTtBQUN0QixRQUFNQyxDQUFDLEdBQUcsRUFBVjtBQUNBQyxJQUFBQSxLQUFLLENBQUNDLElBQU4sQ0FBV0wsVUFBWCxFQUNHTSxPQURILENBRUksVUFBQ0MsSUFBRCxFQUFVO0FBQ1JKLE1BQUFBLENBQUMsQ0FBQ0ssSUFBRixDQUFPO0FBQ0xDLFFBQUFBLEtBQUssRUFBRUYsSUFBSSxDQUFDRyxJQUFMLElBQWFILElBQUksQ0FBQ0ksUUFEcEI7QUFFTEMsUUFBQUEsR0FBRyxFQUFFTCxJQUFJLENBQUNHLElBQUwsSUFBYUgsSUFBSSxDQUFDTSxFQUZsQjtBQUdMQSxRQUFBQSxFQUFFLEVBQUVOLElBQUksQ0FBQ007QUFISixPQUFQO0FBS0QsS0FSTDtBQVVBLFdBQU9WLENBQVA7QUFDRCxHQWJEOztBQWVBLE1BQU1XLFlBQVksR0FBRyxTQUFmQSxZQUFlLE9BSWY7QUFBQSxRQUZGQyxLQUVFLFFBSEpDLE1BR0ksQ0FGRkQsS0FFRTtBQUNKLFFBQU1FLFdBQVcsR0FBRyxFQUFwQjtBQUNBYixJQUFBQSxLQUFLLENBQUNDLElBQU4sQ0FBV1UsS0FBWCxFQUNHVCxPQURILENBRUksVUFBQ0MsSUFBRCxFQUFVO0FBQ1JVLE1BQUFBLFdBQVcsQ0FBQ1QsSUFBWixDQUFpQkQsSUFBakI7QUFDRCxLQUpMO0FBTUFILElBQUFBLEtBQUssQ0FBQ0MsSUFBTixDQUFXTCxVQUFYLEVBQ0dNLE9BREgsQ0FFSSxVQUFDQyxJQUFELEVBQVU7QUFDUlUsTUFBQUEsV0FBVyxDQUFDVCxJQUFaLENBQWlCRCxJQUFqQjtBQUNELEtBSkw7QUFPQU4sSUFBQUEsYUFBYSxDQUFDZ0IsV0FBRCxDQUFiO0FBQ0QsR0FwQkQ7O0FBc0JBLE1BQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNDLFlBQUQ7QUFBQSxXQUFrQixZQUFNO0FBQzFDLFVBQU1DLGVBQWUsR0FBRyxFQUF4QjtBQUNBaEIsTUFBQUEsS0FBSyxDQUFDQyxJQUFOLENBQVdMLFVBQVgsRUFDR00sT0FESCxDQUVJLFVBQUNDLElBQUQsRUFBVTtBQUNSLFlBQUlBLElBQUksQ0FBQ0csSUFBTCxLQUFjUyxZQUFZLENBQUNQLEdBQTNCLElBQWtDTCxJQUFJLENBQUNNLEVBQUwsS0FBWU0sWUFBWSxDQUFDTixFQUEvRCxFQUFtRTtBQUNqRU8sVUFBQUEsZUFBZSxDQUFDWixJQUFoQixDQUFxQkQsSUFBckI7QUFDRDtBQUNGLE9BTkw7QUFTQU4sTUFBQUEsYUFBYSxDQUFDbUIsZUFBRCxDQUFiO0FBQ0QsS0FabUI7QUFBQSxHQUFwQjs7QUFjQSxNQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxJQUFEO0FBQUEsV0FBVSxZQUFNO0FBQ2xDLFVBQUksQ0FBQ0EsSUFBSSxDQUFDVCxFQUFWLEVBQWM7QUFDWjtBQUNEOztBQUNELFVBQU1VLE9BQU8sYUFBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BQWxCLFNBQTRCRixPQUFPLENBQUNDLEdBQVIsQ0FBWUUsd0JBQXhDLENBQWI7QUFDQUMsTUFBQUEsTUFBTSxDQUFDQyxJQUFQLFdBQWVOLE9BQWYsY0FBMEJELElBQUksQ0FBQ1QsRUFBL0IsY0FBcUNTLElBQUksQ0FBQ2IsS0FBMUM7QUFDRCxLQU5tQjtBQUFBLEdBQXBCOztBQVFBLFNBQU87QUFDTFMsSUFBQUEsV0FBVyxFQUFYQSxXQURLO0FBRUxHLElBQUFBLFdBQVcsRUFBWEEsV0FGSztBQUdMbkIsSUFBQUEsU0FBUyxFQUFUQSxTQUhLO0FBSUxZLElBQUFBLFlBQVksRUFBWkE7QUFKSyxHQUFQO0FBTUQsQ0FsRU0iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdXNlQ2hpcEZpbGVzID0gKHN0YXRlRmlsZXMsIHNldEZpbGVzU3RhdGUgPSBudWxsKSA9PiB7XG4gIGNvbnN0IGNoaXBzRGF0YSA9ICgpID0+IHtcbiAgICBjb25zdCBkID0gW107XG4gICAgQXJyYXkuZnJvbShzdGF0ZUZpbGVzKVxuICAgICAgLmZvckVhY2goXG4gICAgICAgIChmaWxlKSA9PiB7XG4gICAgICAgICAgZC5wdXNoKHtcbiAgICAgICAgICAgIGxhYmVsOiBmaWxlLm5hbWUgfHwgZmlsZS5maWxlbmFtZSxcbiAgICAgICAgICAgIGtleTogZmlsZS5uYW1lIHx8IGZpbGUuaWQsXG4gICAgICAgICAgICBpZDogZmlsZS5pZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICk7XG4gICAgcmV0dXJuIGQ7XG4gIH07XG5cbiAgY29uc3QgY2hpcHNDaGFuZ2VkID0gKHtcbiAgICB0YXJnZXQ6IHtcbiAgICAgIGZpbGVzLFxuICAgIH0sXG4gIH0pID0+IHtcbiAgICBjb25zdCBuZXdGaWxlTGlzdCA9IFtdO1xuICAgIEFycmF5LmZyb20oZmlsZXMpXG4gICAgICAuZm9yRWFjaChcbiAgICAgICAgKGZpbGUpID0+IHtcbiAgICAgICAgICBuZXdGaWxlTGlzdC5wdXNoKGZpbGUpO1xuICAgICAgICB9LFxuICAgICAgKTtcbiAgICBBcnJheS5mcm9tKHN0YXRlRmlsZXMpXG4gICAgICAuZm9yRWFjaChcbiAgICAgICAgKGZpbGUpID0+IHtcbiAgICAgICAgICBuZXdGaWxlTGlzdC5wdXNoKGZpbGUpO1xuICAgICAgICB9LFxuICAgICAgKTtcblxuICAgIHNldEZpbGVzU3RhdGUobmV3RmlsZUxpc3QpO1xuICB9O1xuXG4gIGNvbnN0IGNoaXBEZWxldGVkID0gKGNoaXBUb0RlbGV0ZSkgPT4gKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZWRGaWxlTGlzdCA9IFtdO1xuICAgIEFycmF5LmZyb20oc3RhdGVGaWxlcylcbiAgICAgIC5mb3JFYWNoKFxuICAgICAgICAoZmlsZSkgPT4ge1xuICAgICAgICAgIGlmIChmaWxlLm5hbWUgIT09IGNoaXBUb0RlbGV0ZS5rZXkgJiYgZmlsZS5pZCAhPT0gY2hpcFRvRGVsZXRlLmlkKSB7XG4gICAgICAgICAgICB1cGRhdGVkRmlsZUxpc3QucHVzaChmaWxlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICApO1xuXG4gICAgc2V0RmlsZXNTdGF0ZSh1cGRhdGVkRmlsZUxpc3QpO1xuICB9O1xuXG4gIGNvbnN0IGNoaXBDbGlja2VkID0gKGRhdGEpID0+ICgpID0+IHtcbiAgICBpZiAoIWRhdGEuaWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgZmlsZVVybCA9IGAke3Byb2Nlc3MuZW52LkFQSV9VUkx9JHtwcm9jZXNzLmVudi5BVFRBQ0hNRU5UX0RPV05MT0FEX1BBVEh9YDtcbiAgICB3aW5kb3cub3BlbihgJHtmaWxlVXJsfS8ke2RhdGEuaWR9LyR7ZGF0YS5sYWJlbH1gKTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGNoaXBEZWxldGVkLFxuICAgIGNoaXBDbGlja2VkLFxuICAgIGNoaXBzRGF0YSxcbiAgICBjaGlwc0NoYW5nZWQsXG4gIH07XG59O1xuIl19