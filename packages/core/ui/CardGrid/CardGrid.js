"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _UseContext = _interopRequireDefault(require("../UseContext"));

var _UseContext2 = _interopRequireDefault(require("../../app/UseContext"));

var _CardControl = _interopRequireDefault(require("../CardControl"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _default = function _default(props) {
  var appContext = (0, _UseContext2["default"])();
  var useRouter = appContext.useRouter;
  var router = useRouter();
  var data = props.data,
      titleHandler = props.titleHandler,
      descriptionHandler = props.descriptionHandler,
      categoryHandler = props.categoryHandler,
      deleteCardFunction = props.deleteCardFunction,
      dateHandler = props.dateHandler,
      rowDisplay = props.rowDisplay;
  var resourcesPath = props.resourcesPath;

  if (!resourcesPath) {
    var match = router.match;
    var url = match.url;
    resourcesPath = url;
  }

  var xs = 12;
  var sm = 6;
  var md = 4;
  var lg = 4;
  rowDisplay ? xs = sm = md = lg = 12 : null;

  var _useUiContext = (0, _UseContext["default"])(),
      Grid = _useUiContext.Grid,
      Box = _useUiContext.Box;

  return _react["default"].createElement(Box, {
    display: "flex",
    flexGrow: 1,
    mt: 4
  }, _react["default"].createElement(Grid, {
    container: true,
    spacing: 1,
    alignItems: "stretch"
  }, data.map(function (d) {
    return _react["default"].createElement(Grid, {
      key: d.id,
      item: true,
      xs: xs,
      sm: sm,
      md: md,
      lg: lg
    }, _react["default"].createElement(_CardControl["default"], {
      key: d.id,
      id: d.id,
      title: titleHandler && titleHandler(d) || d.title,
      description: descriptionHandler && descriptionHandler(d) || d.description,
      category: categoryHandler && categoryHandler(d),
      action: function action() {
        return router.push("".concat(resourcesPath, "/").concat(d.id));
      },
      actionLabel: "D\xE9tail",
      files: d.files,
      date: dateHandler && dateHandler(d) || d.createdAt,
      deleteCardFunction: deleteCardFunction
    }));
  })));
};

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91aS9DYXJkR3JpZC9DYXJkR3JpZC50c3giXSwibmFtZXMiOlsicHJvcHMiLCJhcHBDb250ZXh0IiwidXNlUm91dGVyIiwicm91dGVyIiwiZGF0YSIsInRpdGxlSGFuZGxlciIsImRlc2NyaXB0aW9uSGFuZGxlciIsImNhdGVnb3J5SGFuZGxlciIsImRlbGV0ZUNhcmRGdW5jdGlvbiIsImRhdGVIYW5kbGVyIiwicm93RGlzcGxheSIsInJlc291cmNlc1BhdGgiLCJtYXRjaCIsInVybCIsInhzIiwic20iLCJtZCIsImxnIiwiR3JpZCIsIkJveCIsIm1hcCIsImQiLCJpZCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJwdXNoIiwiZmlsZXMiLCJjcmVhdGVkQXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztlQUVlLGtCQUFDQSxLQUFELEVBQVc7QUFDeEIsTUFBTUMsVUFBVSxHQUFHLDhCQUFuQjtBQUR3QixNQUVoQkMsU0FGZ0IsR0FFRkQsVUFGRSxDQUVoQkMsU0FGZ0I7QUFHeEIsTUFBTUMsTUFBTSxHQUFHRCxTQUFTLEVBQXhCO0FBSHdCLE1BS3RCRSxJQUxzQixHQVlwQkosS0Fab0IsQ0FLdEJJLElBTHNCO0FBQUEsTUFNdEJDLFlBTnNCLEdBWXBCTCxLQVpvQixDQU10QkssWUFOc0I7QUFBQSxNQU90QkMsa0JBUHNCLEdBWXBCTixLQVpvQixDQU90Qk0sa0JBUHNCO0FBQUEsTUFRdEJDLGVBUnNCLEdBWXBCUCxLQVpvQixDQVF0Qk8sZUFSc0I7QUFBQSxNQVN0QkMsa0JBVHNCLEdBWXBCUixLQVpvQixDQVN0QlEsa0JBVHNCO0FBQUEsTUFVdEJDLFdBVnNCLEdBWXBCVCxLQVpvQixDQVV0QlMsV0FWc0I7QUFBQSxNQVd0QkMsVUFYc0IsR0FZcEJWLEtBWm9CLENBV3RCVSxVQVhzQjtBQUFBLE1BY2xCQyxhQWRrQixHQWNBWCxLQWRBLENBY2xCVyxhQWRrQjs7QUFleEIsTUFBSSxDQUFDQSxhQUFMLEVBQW9CO0FBQUEsUUFDVkMsS0FEVSxHQUNBVCxNQURBLENBQ1ZTLEtBRFU7QUFBQSxRQUVWQyxHQUZVLEdBRUZELEtBRkUsQ0FFVkMsR0FGVTtBQUdsQkYsSUFBQUEsYUFBYSxHQUFHRSxHQUFoQjtBQUNEOztBQUVELE1BQUlDLEVBQUUsR0FBRyxFQUFUO0FBQ0EsTUFBSUMsRUFBRSxHQUFHLENBQVQ7QUFDQSxNQUFJQyxFQUFFLEdBQUcsQ0FBVDtBQUNBLE1BQUlDLEVBQUUsR0FBRyxDQUFUO0FBRUNQLEVBQUFBLFVBQUQsR0FBZUksRUFBRSxHQUFHQyxFQUFFLEdBQUdDLEVBQUUsR0FBR0MsRUFBRSxHQUFHLEVBQW5DLEdBQXdDLElBQXhDOztBQTFCd0Isc0JBNEJGLDZCQTVCRTtBQUFBLE1BNEJoQkMsSUE1QmdCLGlCQTRCaEJBLElBNUJnQjtBQUFBLE1BNEJWQyxHQTVCVSxpQkE0QlZBLEdBNUJVOztBQThCeEIsU0FDRSxnQ0FBQyxHQUFEO0FBQUssSUFBQSxPQUFPLEVBQUMsTUFBYjtBQUFvQixJQUFBLFFBQVEsRUFBRSxDQUE5QjtBQUFpQyxJQUFBLEVBQUUsRUFBRTtBQUFyQyxLQUNFLGdDQUFDLElBQUQ7QUFBTSxJQUFBLFNBQVMsTUFBZjtBQUFnQixJQUFBLE9BQU8sRUFBRSxDQUF6QjtBQUE0QixJQUFBLFVBQVUsRUFBQztBQUF2QyxLQUVJZixJQUFJLENBQUNnQixHQUFMLENBQVMsVUFBQ0MsQ0FBRDtBQUFBLFdBQ1AsZ0NBQUMsSUFBRDtBQUFNLE1BQUEsR0FBRyxFQUFFQSxDQUFDLENBQUNDLEVBQWI7QUFBaUIsTUFBQSxJQUFJLE1BQXJCO0FBQXNCLE1BQUEsRUFBRSxFQUFFUixFQUExQjtBQUE4QixNQUFBLEVBQUUsRUFBRUMsRUFBbEM7QUFBc0MsTUFBQSxFQUFFLEVBQUVDLEVBQTFDO0FBQThDLE1BQUEsRUFBRSxFQUFFQztBQUFsRCxPQUNFLGdDQUFDLHVCQUFEO0FBQ0UsTUFBQSxHQUFHLEVBQUVJLENBQUMsQ0FBQ0MsRUFEVDtBQUVFLE1BQUEsRUFBRSxFQUFFRCxDQUFDLENBQUNDLEVBRlI7QUFHRSxNQUFBLEtBQUssRUFBR2pCLFlBQVksSUFBSUEsWUFBWSxDQUFDZ0IsQ0FBRCxDQUE3QixJQUFxQ0EsQ0FBQyxDQUFDRSxLQUhoRDtBQUlFLE1BQUEsV0FBVyxFQUFHakIsa0JBQWtCLElBQUlBLGtCQUFrQixDQUFDZSxDQUFELENBQXpDLElBQWlEQSxDQUFDLENBQUNHLFdBSmxFO0FBS0UsTUFBQSxRQUFRLEVBQUVqQixlQUFlLElBQUlBLGVBQWUsQ0FBQ2MsQ0FBRCxDQUw5QztBQU1FLE1BQUEsTUFBTSxFQUFFO0FBQUEsZUFBTWxCLE1BQU0sQ0FBQ3NCLElBQVAsV0FBZWQsYUFBZixjQUFnQ1UsQ0FBQyxDQUFDQyxFQUFsQyxFQUFOO0FBQUEsT0FOVjtBQU9FLE1BQUEsV0FBVyxFQUFDLFdBUGQ7QUFRRSxNQUFBLEtBQUssRUFBRUQsQ0FBQyxDQUFDSyxLQVJYO0FBU0UsTUFBQSxJQUFJLEVBQUdqQixXQUFXLElBQUlBLFdBQVcsQ0FBQ1ksQ0FBRCxDQUEzQixJQUFtQ0EsQ0FBQyxDQUFDTSxTQVQ3QztBQVVFLE1BQUEsa0JBQWtCLEVBQUVuQjtBQVZ0QixNQURGLENBRE87QUFBQSxHQUFULENBRkosQ0FERixDQURGO0FBd0JELEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVVpQ29udGV4dCBmcm9tICcuLi9Vc2VDb250ZXh0JztcbmltcG9ydCB1c2VBcHBDb250ZXh0IGZyb20gJy4uLy4uL2FwcC9Vc2VDb250ZXh0JztcbmltcG9ydCBDYXJkQ29udHJvbCBmcm9tICcuLi9DYXJkQ29udHJvbCc7XG5cbmV4cG9ydCBkZWZhdWx0IChwcm9wcykgPT4ge1xuICBjb25zdCBhcHBDb250ZXh0ID0gdXNlQXBwQ29udGV4dCgpO1xuICBjb25zdCB7IHVzZVJvdXRlciB9ID0gYXBwQ29udGV4dDtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnN0IHtcbiAgICBkYXRhLFxuICAgIHRpdGxlSGFuZGxlcixcbiAgICBkZXNjcmlwdGlvbkhhbmRsZXIsXG4gICAgY2F0ZWdvcnlIYW5kbGVyLFxuICAgIGRlbGV0ZUNhcmRGdW5jdGlvbixcbiAgICBkYXRlSGFuZGxlcixcbiAgICByb3dEaXNwbGF5LFxuICB9ID0gcHJvcHM7XG5cbiAgbGV0IHsgcmVzb3VyY2VzUGF0aCB9ID0gcHJvcHM7XG4gIGlmICghcmVzb3VyY2VzUGF0aCkge1xuICAgIGNvbnN0IHsgbWF0Y2ggfSA9IHJvdXRlcjtcbiAgICBjb25zdCB7IHVybCB9ID0gbWF0Y2g7XG4gICAgcmVzb3VyY2VzUGF0aCA9IHVybDtcbiAgfVxuXG4gIGxldCB4cyA9IDEyO1xuICBsZXQgc20gPSA2O1xuICBsZXQgbWQgPSA0O1xuICBsZXQgbGcgPSA0O1xuXG4gIChyb3dEaXNwbGF5KSA/IHhzID0gc20gPSBtZCA9IGxnID0gMTIgOiBudWxsO1xuXG4gIGNvbnN0IHsgR3JpZCwgQm94IH0gPSB1c2VVaUNvbnRleHQoKTtcblxuICByZXR1cm4gKFxuICAgIDxCb3ggZGlzcGxheT1cImZsZXhcIiBmbGV4R3Jvdz17MX0gbXQ9ezR9PlxuICAgICAgPEdyaWQgY29udGFpbmVyIHNwYWNpbmc9ezF9IGFsaWduSXRlbXM9XCJzdHJldGNoXCI+XG4gICAgICAgIHtcbiAgICAgICAgICBkYXRhLm1hcCgoZCkgPT4gKFxuICAgICAgICAgICAgPEdyaWQga2V5PXtkLmlkfSBpdGVtIHhzPXt4c30gc209e3NtfSBtZD17bWR9IGxnPXtsZ30+XG4gICAgICAgICAgICAgIDxDYXJkQ29udHJvbFxuICAgICAgICAgICAgICAgIGtleT17ZC5pZH1cbiAgICAgICAgICAgICAgICBpZD17ZC5pZH1cbiAgICAgICAgICAgICAgICB0aXRsZT17KHRpdGxlSGFuZGxlciAmJiB0aXRsZUhhbmRsZXIoZCkpIHx8IGQudGl0bGV9XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249eyhkZXNjcmlwdGlvbkhhbmRsZXIgJiYgZGVzY3JpcHRpb25IYW5kbGVyKGQpKSB8fCBkLmRlc2NyaXB0aW9ufVxuICAgICAgICAgICAgICAgIGNhdGVnb3J5PXtjYXRlZ29yeUhhbmRsZXIgJiYgY2F0ZWdvcnlIYW5kbGVyKGQpfVxuICAgICAgICAgICAgICAgIGFjdGlvbj17KCkgPT4gcm91dGVyLnB1c2goYCR7cmVzb3VyY2VzUGF0aH0vJHtkLmlkfWApfVxuICAgICAgICAgICAgICAgIGFjdGlvbkxhYmVsPVwiRMOpdGFpbFwiXG4gICAgICAgICAgICAgICAgZmlsZXM9e2QuZmlsZXN9XG4gICAgICAgICAgICAgICAgZGF0ZT17KGRhdGVIYW5kbGVyICYmIGRhdGVIYW5kbGVyKGQpKSB8fCBkLmNyZWF0ZWRBdH1cbiAgICAgICAgICAgICAgICBkZWxldGVDYXJkRnVuY3Rpb249e2RlbGV0ZUNhcmRGdW5jdGlvbn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvR3JpZD5cbiAgICAgICAgICApKVxuICAgICAgICB9XG4gICAgICA8L0dyaWQ+XG4gICAgPC9Cb3g+XG4gICk7XG59O1xuIl19